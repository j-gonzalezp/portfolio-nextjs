
{
  "slug": "ear-training-app",
  "tags": ["Next.js", "Appwrite", "Tailwind CSS", "TypeScript", "Tone.js", "React"],
  "imageUrl": "/images/hospital.png",
  "isFeatured": true,
  "isAcademic": false,
  "repoUrl": "https://github.com/j-gonzalezp/melodytrainer",
  "liveUrl": null,
  "translations": {
    "es": {
      "title": "Aplicación Web de Entrenamiento Auditivo: Melody Master",
      "summary": "Aplicación web interactiva para músicos, enfocada en el entrenamiento auditivo de solfeo, melodías, ritmo y cadencias. Incluye un juego de Sudoku musical y un robusto sistema de progreso con backend en Appwrite.",
      "content": "<p>Melody Master es una aplicación web en desarrollo activo, diseñada para ser una herramienta integral de entrenamiento auditivo para músicos. Su objetivo principal es mejorar la percepción musical y la comprensión a través de ejercicios interactivos y personalizables. El proyecto se distingue por su sólida base tecnológica y una arquitectura modular.</p><p><strong>Funcionalidades Clave Implementadas:</strong></p><ul><li><strong>Práctica de Solfeo:</strong> Módulos dedicados a la identificación y entonación de grados de la escala, fundamentales para la afinación relativa.</li><li><strong>Entrenamiento Melódico:</strong> Generación dinámica de secuencias melódicas para practicar el reconocimiento y la reproducción de melodías, con opciones de configuración avanzadas.</li><li><strong>Práctica Rítmica:</strong> Herramientas para desarrollar el sentido del ritmo y el tempo, incluyendo la reproducción de patrones rítmicos complejos y dinámicos.</li><li><strong>Reproductor de Cadencias:</strong> Un componente especializado para explorar y comprender cadencias armónicas, permitiendo la reproducción de una amplia biblioteca de progresiones.</li><li><strong>Autenticación de Usuario y Seguimiento de Progreso:</strong> Un sistema de autenticación seguro (email/OTP) con Appwrite, que permite a los usuarios guardar su progreso, acceder a un historial detallado de precisión tonal y continuar su entrenamiento personalizado.</li><li><strong>Panel de Control Interactivo:</strong> Un dashboard personalizado donde los usuarios pueden configurar sus sesiones de práctica (contexto musical, rango de notas, niveles de dificultad) y visualizar su historial de rendimiento.</li><li><strong>Sudoku Temático Musical:</strong> Una adición innovadora que combina el clásico juego de Sudoku con elementos musicales, ofreciendo un ejercicio cognitivo complementario.</li><li><strong>Opciones de Reproducción Avanzadas:</strong> Incluye funcionalidades como bucles de melodías, ritmos dinámicos, melodías de apoyo con cambios de BPM graduales, y sonidos ambientales (drone, ruido marrón) para mejorar la concentración.</li><li><strong>Sistema de Feedback Detallado:</strong> Proporciona validación instantánea de las respuestas del usuario, seguimiento del primer intento, y una opción para revelar las respuestas correctas (con penalización de puntuación).</li><li><strong>Atajos de Teclado:</strong> Implementación de atajos de teclado globales para una interacción más fluida y eficiente.</li></ul><p><strong>Tecnologías Utilizadas:</strong></p><ul><li><strong>Next.js (v15.2.4):</strong> Framework de React para el desarrollo de aplicaciones web de alto rendimiento, utilizando el App Router para una estructura de rutas y componentes eficiente.</li><li><strong>React (v19.0.0) & React DOM (v19.0.0):</strong> Librerías fundamentales para la construcción de interfaces de usuario interactivas y modulares.</li><li><strong>TypeScript (v5.8.3):</strong> Lenguaje de programación que añade tipado estático a JavaScript, mejorando la calidad del código, la detectabilidad de errores y la mantenibilidad.</li><li><strong>Appwrite (v17.0.1) & Node-Appwrite (v15.0.1):</strong> Backend-as-a-Service de código abierto utilizado para la autenticación de usuarios, la gestión de bases de datos (progreso de usuario, historial de precisión tonal) y la ejecución de lógica de negocio en el servidor (Server Actions).</li><li><strong>Tone.js (v15.0.4):</strong> Un potente framework de audio web que permite la síntesis, el muestreo y la manipulación de audio en el navegador, esencial para la generación y reproducción de todos los elementos musicales.</li><li><strong>Tailwind CSS (v4.0.17) & Shadcn UI:</strong> Tailwind CSS para un estilado rápido y basado en utilidades, complementado por componentes de Shadcn UI que proporcionan una interfaz de usuario consistente, accesible y visualmente atractiva.</li><li><strong>Jest (v29.7.0) & React Testing Library (v16.3.0):</strong> Herramientas para pruebas unitarias y de integración, asegurando la fiabilidad del código.</li><li><strong>ESLint (v9):</strong> Herramienta de linting para mantener la calidad y consistencia del código.</li><li><strong>Lucide React (v0.503.0):</strong> Librería de iconos SVG utilizada para elementos visuales en la interfaz.</li></ul><p><strong>Estructura del Proyecto:</strong></p><p>El proyecto sigue una estructura de directorios lógica y modular:</p><ul><li><code>app/</code>: Rutas y páginas principales de Next.js (dashboard, login, solfeo, rutas dinámicas para tests).</li><li><code>components/</code>: Componentes React reutilizables, organizados por funcionalidad (autenticación, cadencias, dashboard, layout, melodías, solfeo, sudoku, UI genérica).</li><li><code>contexts/</code>: Proveedores de React Context API para la gestión de estado global (ej. <code>AuthContext</code>).</li><li><code>lib/</code>: Funciones de utilidad, configuraciones y lógica de interacción con la API (acciones de servidor, configuración de Appwrite, utilidades musicales, generadores de ritmo, tipos).</li><li>Archivos de configuración raíz: <code>.env.local</code>, <code>.gitignore</code>, <code>components.json</code>, <code>eslint.config.mjs</code>, <code>jest.config.ts</code>, <code>jest.log</code>, <code>jest.setup.ts</code>, <code>next-env.d.ts</code>, <code>next.config.ts</code>, <code>package-lock.json</code>, <code>package.json</code>, <code>postcss.config.mjs</code>, <code>README.md</code>, <code>tpyepractice.txt</code>, <code>tsconfig.json</code>.</li></ul><p>El proyecto está en constante evolución, con un enfoque en la mejora continua de la experiencia de usuario y la expansión de las capacidades de entrenamiento auditivo.</p>",
      "progress": {
        "currentFocus": "Refinando la experiencia de usuario y la progresión de ejercicios, incluyendo la implementación de la función de 'Mostrar Respuestas' y la mejora de la generación de ritmos dinámicos. Se está trabajando en la estabilidad del audio y la integración con el backend de Appwrite para el seguimiento detallado del progreso.",
        "stories": [
          { "id": "ET-001", "title": "Autenticación de Usuario", "asA": "Músico", "iWant": "registrarme e iniciar sesión", "soThat": "pueda guardar mi progreso", "status": "Implementado y Refinado", "tags": ["Appwrite Auth", "Backend", "Frontend"], "notes": "Implementación completa de email/OTP, gestión de sesiones y protección de rutas." },
          { "id": "ET-002", "title": "Reconocimiento de Intervalos/Melodías", "asA": "Músico", "iWant": "escuchar secuencias de notas e identificar grados/intervalos", "soThat": "pueda mejorar mi oído relativo", "status": "Implementado y en Refinamiento", "tags": ["Core Feature", "Frontend", "Audio", "Generación"], "acceptanceCriteria": ["Generar secuencias de notas dinámicas.", "Reproducir audio con Tone.js.", "Permitir entrada de respuestas por grados.", "Validar respuestas y proporcionar feedback.", "Opción de revelar respuestas (con penalización)."] },
          { "id": "ET-003", "title": "Base de Datos de Progreso y Seguimiento", "asA": "Desarrollador", "iWant": "almacenar resultados de ejercicios por usuario", "soThat": "se puedan mostrar estadísticas y seguimiento", "status": "Implementado", "tags": ["Appwrite DB", "Backend", "Data Model"], "notes": "Sistema robusto de GroupProgress y ToneAccuracy para seguimiento detallado de BPM, graduación y precisión por grado." },
          { "id": "ET-004", "title": "Identificación de Acordes (May/Men)", "asA": "Músico", "iWant": "escuchar un acorde básico e identificar si es Mayor o Menor", "soThat": "pueda reconocer calidades de acordes", "status": "En Desarrollo (Reproducción Implementada)", "tags": ["Core Feature", "Frontend", "Audio", "Armonía"], "notes": "La generación y reproducción de cadencias y acordes complejos ya está implementada. La funcionalidad específica de 'identificación' es el siguiente paso." },
          { "id": "ET-005", "title": "Manifiesto PWA y Service Worker", "asA": "Usuario", "iWant": "instalar la aplicación en mi dispositivo y usarla sin conexión", "soThat": "pueda practicar en cualquier lugar", "status": "Planificado", "tags": ["PWA", "Frontend"] },
          { "id": "ET-006", "title": "Módulo de Práctica de Ritmo", "asA": "Músico", "iWant": "practicar patrones rítmicos variados", "soThat": "pueda mejorar mi sentido del ritmo", "status": "Implementado", "tags": ["Core Feature", "Frontend", "Audio", "Ritmo"], "notes": "Generación de ritmos dinámicos y reproducción integrada en los ejercicios." },
          { "id": "ET-007", "title": "Juego de Sudoku Musical", "asA": "Usuario", "iWant": "jugar un Sudoku con temática musical", "soThat": "pueda ejercitar mi mente de forma divertida", "status": "Implementado", "tags": ["Juego", "Frontend", "UI"], "notes": "Juego de Sudoku completo con historial de movimientos y modo de notas." },
          { "id": "ET-008", "title": "Reproductor de Cadencias Interactivo", "asA": "Músico", "iWant": "escuchar y analizar diferentes tipos de cadencias", "soThat": "pueda comprender mejor la armonía", "status": "Implementado", "tags": ["Herramienta", "Frontend", "Audio", "Armonía"], "notes": "Permite seleccionar clave, cadencia, BPM, voces e instrumento." },
          { "id": "ET-009", "title": "Melodías de Apoyo y Sonidos Ambientales", "asA": "Músico", "iWant": "tener ayuda auditiva durante la práctica", "soThat": "pueda concentrarme mejor o superar dificultades", "status": "Implementado", "tags": ["UX", "Audio"], "notes": "Funcionalidad de melodía de apoyo con transición de BPM y drones/ruido marrón." }
        ],
        "changelog": [
          { "date": "2025-06-24", "description": "Actualización del README." },
          { "date": "2025-06-23", "description": "Corrección en la reproducción de melodías de apoyo." },
          { "date": "2025-06-20", "description": "Implementación del módulo de solfeo y el botón para mostrar/ocultar respuestas." },
          { "date": "2025-06-19", "description": "Mejoras en el rendimiento general y persistencia de configuraciones en localStorage." },
          { "date": "2025-06-18", "description": "Implementación inicial del sonido de drone." },
          { "date": "2025-06-17", "description": "Cambios en los botones de la interfaz, integración del juego de Sudoku y mejoras en la funcionalidad del drone." },
          { "date": "2025-06-12", "description": "Implementación de atajos de teclado (Ctrl+Espacio) y ajuste de la configuración por defecto del botón de apoyo." },
          { "date": "2025-06-11", "description": "Mejoras en el botón de apoyo y ajustes en el auto-enfoque de los inputs." },
          { "date": "2025-06-09", "description": "Correcciones y mejoras en el juego de Sudoku (MVP y fixes)." },
          { "date": "2025-06-02", "description": "Ajuste de la lógica de 'total beats' en la generación de ritmos." },
          { "date": "2025-06-01", "description": "Correcciones en la cadencia y solución de un problema con la última nota que no sonaba." },
          { "date": "2025-05-31", "description": "Mejoras en la humanización de la velocidad de las notas y suavizado de ritmos dinámicos." },
          { "date": "2025-05-30", "description": "Implementación del botón de cadencia y ajustes previos al favicon." },
          { "date": "2025-05-29", "description": "Cambios generales en la configuración." },
          { "date": "2025-05-28", "description": "Cambios iniciales en la configuración y estructura." },
          { "date": "2025-05-27", "description": "Ajustes en la gestión de inputs y mejoras en el layout para dispositivos móviles." }
        ]
      }
    },
    "en": {
      "title": "Ear Training Web Application: Melody Master",
      "summary": "Interactive web application for musicians, focused on ear training for solfege, melodies, rhythm, and cadences. Includes a musical Sudoku game and a robust progress tracking system with an Appwrite backend.",
      "content": "<p>Melody Master is a web application under active development, designed to be a comprehensive ear training tool for musicians. Its main goal is to improve musical perception and understanding through interactive and customizable exercises. The project stands out for its solid technological foundation and modular architecture.</p><p><strong>Key Implemented Features:</strong></p><ul><li><strong>Solfege Practice:</strong> Dedicated modules for identifying and intoning scale degrees, fundamental for relative pitch.</li><li><strong>Melody Training:</strong> Dynamic generation of melodic sequences to practice recognizing and reproducing melodies, with advanced configuration options.</li><li><strong>Rhythm Practice:</strong> Tools to develop a strong sense of rhythm and timing, including playing along to complex and dynamic rhythmic patterns.</li><li><strong>Cadence Player:</strong> A specialized component to explore and understand harmonic cadences, allowing playback of a wide library of progressions.</li><li><strong>User Authentication and Progress Tracking:</strong> A secure authentication system (email/OTP) with Appwrite, enabling users to save their progress, access a detailed tone accuracy history, and continue their personalized training.</li><li><strong>Interactive Dashboard:</strong> A personalized dashboard where users can configure their practice sessions (musical context, note range, difficulty levels) and visualize their performance history.</li><li><strong>Music-Themed Sudoku Game:</strong> An innovative addition that combines the classic Sudoku puzzle with musical elements, offering a complementary cognitive exercise.</li><li><strong>Advanced Playback Options:</strong> Includes features like melody looping, dynamic rhythms, support melodies with gradual BPM changes, and ambient sounds (drone, brown noise) to enhance focus.</li><li><strong>Detailed Feedback System:</strong> Provides instant validation of user answers, tracks first attempts, and offers an option to reveal correct answers (with score penalty).</li><li><strong>Keyboard Shortcuts:</strong> Implementation of global keyboard shortcuts for smoother and more efficient interaction.</li></ul><p><strong>Technologies Used:</strong></p><ul><li><strong>Next.js (v15.2.4):</strong> React framework for developing high-performance web applications, using the App Router for an efficient route and component structure.</li><li><strong>React (v19.0.0) & React DOM (v19.0.0):</strong> Fundamental libraries for building interactive and modular user interfaces.</li><li><strong>TypeScript (v5.8.3):</strong> Programming language that adds static typing to JavaScript, improving code quality, error detection, and maintainability.</li><li><strong>Appwrite (v17.0.1) & Node-Appwrite (v15.0.1):</strong> Open-source Backend-as-a-Service used for user authentication, database management (user progress, tone accuracy history), and server-side business logic (Server Actions).</li><li><strong>Tone.js (v15.0.4):</strong> A powerful web audio framework that enables synthesis, sampling, and audio manipulation in the browser, essential for generating and playing all musical elements.</li><li><strong>Tailwind CSS (v4.0.17) & Shadcn UI:</strong> Tailwind CSS for rapid, utility-first styling, complemented by Shadcn UI components that provide a consistent, accessible, and visually appealing user interface.</li><li><strong>Jest (v29.7.0) & React Testing Library (v16.3.0):</strong> Tools for unit and integration testing, ensuring code reliability.</li><li><strong>ESLint (v9):</strong> Linting tool to maintain code quality and consistency.</li><li><strong>Lucide React (v0.503.0):</strong> SVG icon library used for visual elements in the interface.</li></ul><p><strong>Project Structure:</strong></p><p>The project follows a logical and modular directory structure:</p><ul><li><code>app/</code>: Main Next.js routes and pages (dashboard, login, solfege, dynamic test routes).</li><li><code>components/</code>: Reusable React components, organized by functionality (authentication, cadences, dashboard, layout, melodies, solfege, sudoku, generic UI).</li><li><code>contexts/</code>: React Context API providers for global state management (e.g., <code>AuthContext</code>).</li><li><code>lib/</code>: Utility functions, configurations, and API interaction logic (server actions, Appwrite config, musical utilities, rhythm generators, types).</li><li>Root configuration files: <code>.env.local</code>, <code>.gitignore</code>, <code>components.json</code>, <code>eslint.config.mjs</code>, <code>jest.config.ts</code>, <code>jest.log</code>, <code>jest.setup.ts</code>, <code>next-env.d.ts</code>, <code>next.config.ts</code>, <code>package-lock.json</code>, <code>package.json</code>, <code>postcss.config.mjs</code>, <code>README.md</code>, <code>tpyepractice.txt</code>, <code>tsconfig.json</code>.</li></ul><p>The project is constantly evolving, with a focus on continuous improvement of the user experience and expansion of ear training capabilities.</p>",
      "progress": {
        "currentFocus": "Refining user experience and exercise progression, including implementing the 'Show Answers' feature and improving dynamic rhythm generation. Work is ongoing on audio stability and detailed progress tracking integration with the Appwrite backend.",
        "stories": [
          { "id": "ET-001", "title": "User Authentication", "asA": "Musician", "iWant": "to sign up and log in", "soThat": "I can save my progress", "status": "Implemented and Refined", "tags": ["Appwrite Auth", "Backend", "Frontend"], "notes": "Full implementation of email/OTP, session management, and route protection." },
          { "id": "ET-002", "title": "Interval/Melody Recognition", "asA": "Musician", "iWant": "to hear note sequences and identify degrees/intervals", "soThat": "I can improve my relative pitch", "status": "Implemented and Refining", "tags": ["Core Feature", "Frontend", "Audio", "Generation"], "acceptanceCriteria": ["Generate dynamic note sequences.", "Play audio with Tone.js.", "Allow degree input for answers.", "Validate answers and provide feedback.", "Option to reveal answers (with penalty)."] },
          { "id": "ET-003", "title": "Progress Database and Tracking", "asA": "Developer", "iWant": "to store exercise results per user", "soThat": "stats and tracking can be displayed", "status": "Implemented", "tags": ["Appwrite DB", "Backend", "Data Model"], "notes": "Robust GroupProgress and ToneAccuracy system for detailed tracking of BPM, graduation, and per-degree accuracy." },
          { "id": "ET-004", "title": "Chord Identification (Maj/Min)", "asA": "Musician", "iWant": "to hear a basic chord and identify if it's Major or Minor", "soThat": "I can recognize chord qualities", "status": "In Development (Playback Implemented)", "tags": ["Core Feature", "Frontend", "Audio", "Harmony"], "notes": "Generation and playback of cadences and complex chords is already implemented. Specific 'identification' functionality is the next step." },
          { "id": "ET-005", "title": "PWA Manifest & Service Worker", "asA": "User", "iWant": "to install the app on my device and use it offline", "soThat": "I can practice anywhere", "status": "Planned", "tags": ["PWA", "Frontend"] },
          { "id": "ET-006", "title": "Rhythm Practice Module", "asA": "Musician", "iWant": "to practice varied rhythmic patterns", "soThat": "I can improve my sense of rhythm", "status": "Implemented", "tags": ["Core Feature", "Frontend", "Audio", "Rhythm"], "notes": "Dynamic rhythm generation and integrated playback in exercises." },
          { "id": "ET-007", "title": "Musical Sudoku Game", "asA": "User", "iWant": "to play a music-themed Sudoku", "soThat": "I can exercise my mind in a fun way", "status": "Implemented", "tags": ["Game", "Frontend", "UI"], "notes": "Full Sudoku game with move history and notes mode." },
          { "id": "ET-008", "title": "Interactive Cadence Player", "asA": "Musician", "iWant": "to listen to and analyze different types of cadences", "soThat": "I can better understand harmony", "status": "Implemented", "tags": ["Tool", "Frontend", "Audio", "Harmony"], "notes": "Allows selecting key, cadence, BPM, voices, and instrument." },
          { "id": "ET-009", "title": "Support Melodies and Ambient Sounds", "asA": "Musician", "iWant": "to have auditory assistance during practice", "soThat": "I can concentrate better or overcome difficulties", "status": "Implemented", "tags": ["UX", "Audio"], "notes": "BPM-transitioning support melody and drone/brown noise functionalities." }
        ],
        "changelog": [
          { "date": "2025-06-24", "description": "README update." },
          { "date": "2025-06-23", "description": "Fix in support melody playback." },
          { "date": "2025-06-20", "description": "Implementation of the solfege module and the show/hide answers button." },
          { "date": "2025-06-19", "description": "General performance improvements and settings persistence in localStorage." },
          { "date": "2025-06-18", "description": "Initial implementation of the drone sound." },
          { "date": "2025-06-17", "description": "UI button changes, Sudoku game integration, and drone functionality improvements." },
          { "date": "2025-06-12", "description": "Keyboard shortcuts (Ctrl+Space) implemented and default setting for support button changed." },
          { "date": "2025-06-11", "description": "Improvements to the support button and auto-focus adjustments for inputs." },
          { "date": "2025-06-09", "description": "Sudoku game fixes and MVP implementation." },
          { "date": "2025-06-02", "description": "Adjustment of 'total beats' logic in rhythm generation." },
          { "date": "2025-06-01", "description": "Cadence fixes and resolution of a silent last note issue; cadence still pending." },
          { "date": "2025-05-31", "description": "Humanized velocity for notes and smoothed dynamic rhythms." },
          { "date": "2025-05-30", "description": "Cadence button implementation and pre-favicon adjustments." },
          { "date": "2025-05-29", "description": "General configuration changes." },
          { "date": "2025-05-28", "description": "Initial configuration and structural changes." },
          { "date": "2025-05-27", "description": "Input management adjustments and layout improvements for mobile devices." }
        ]
      }
    }
  }
}
